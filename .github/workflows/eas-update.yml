
name: Update expo
on: [push]

jobs:
  easUpdate:
    name: EAS Update
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'github actions - gen update')

    steps:
      - name: Checkout repository
        id: get_repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Read JSON file
        id: read_json
        run: |
          tokenEas=$(jq -r '.tokenEas' .flaxboll/data.json)
          userID=$(jq -r '.userID' .flaxboll/data.json)
          projectID=$(jq -r '.projectID' .flaxboll/data.json)
          echo "tokenEas=$tokenEas" >> $GITHUB_ENV
          echo "userID=$userID" >> $GITHUB_ENV
          echo "projectID=$projectID" >> $GITHUB_ENV
        shell: bash
         
      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ env.tokenEas }}

      - name: Cache Node.js modules
        id: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          yarn install
          sudo apt-get update && sudo apt-get install -y expect

      - name: Create expect script
        run: |
          echo '#!/usr/bin/expect -f
          set timeout 60
          spawn eas init
          expect {
            "Would you like to create a project for*" {
              send "y"
              exp_continue
            }
            "Link this project?*" {
              send "y"
              exp_continue
            }
            "Project is already linked to a different ID:*" {
              send "y"
              exp_continue
            }
            eof
          }' > eas_init_expect.sh
          chmod +x eas_init_expect.sh

      - name: EAS Init
        id: eas_init
        run: |
          ./eas_init_expect.sh > eas_init_output.txt 2>&1 || true

      - name: Extract Project ID and Write to .env
        id: extract_project_id
        run: |
          if grep -q 'Project successfully linked' eas_init_output.txt; then
            echo "Encontrado 'Project successfully linked'"
            projectId=$(grep -oP 'Project successfully linked (ID: [a-f0-9-]+)' eas_init_output.txt | awk -F 'ID: ' '{print $2}' | tr -d ')')
          elif grep -q 'Existing project found' eas_init_output.txt; then
            echo "Encontrado 'Existing project found'"
            projectId=$(grep -oP 'Existing project found: @[^ ]* (ID: [a-f0-9-]+)' eas_init_output.txt | awk -F 'ID: ' '{print $2}' | tr -d ')')
          else
            echo "Erro: Project ID não encontrado na saída."
            exit 1
          fi
          echo "Project ID extraído: $projectId"
          echo "PROJECT_ID=$projectId" >> .env
      
      - name: Configure EAS project
        run: |
          source .env
          echo "Configurando o projeto EAS com o ID $PROJECT_ID"
          echo '#!/usr/bin/expect -f
          set timeout 60
          set project_id [lindex $argv 0]
          spawn eas init --id $project_id --non-interactive
          expect {
            "Project is already linked to a different ID:*" {
              send "y"
              exp_continue
            }
            eof
          }' > eas_configure_expect.sh

          chmod +x eas_configure_expect.sh
          ./eas_configure_expect.sh $PROJECT_ID

      - name: Create preview
        id: preview
        uses: expo/expo-github-action/preview@v8
        with:
          command: eas update --auto

      - name: Set Firebase Qr Code
        run: |
          curl --location 'https://fireupdateprjdata-7o72j76u5q-ue.a.run.app' \
          --header 'Content-Type: application/json' \
          --data "{
              \"projectID\": \"${{ env.projectID }}\",
              \"userID\": \"${{ env.userID }}\",
              \"qrCodeUrl\": \"${{ steps.preview.outputs.qr }}\"
          }"
